package com.boot.model.cluster;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class JsResourceStatisticsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public JsResourceStatisticsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andResourceidIsNull() {
            addCriterion("resourceId is null");
            return (Criteria) this;
        }

        public Criteria andResourceidIsNotNull() {
            addCriterion("resourceId is not null");
            return (Criteria) this;
        }

        public Criteria andResourceidEqualTo(String value) {
            addCriterion("resourceId =", value, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidNotEqualTo(String value) {
            addCriterion("resourceId <>", value, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidGreaterThan(String value) {
            addCriterion("resourceId >", value, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidGreaterThanOrEqualTo(String value) {
            addCriterion("resourceId >=", value, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidLessThan(String value) {
            addCriterion("resourceId <", value, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidLessThanOrEqualTo(String value) {
            addCriterion("resourceId <=", value, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidLike(String value) {
            addCriterion("resourceId like", value, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidNotLike(String value) {
            addCriterion("resourceId not like", value, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidIn(List<String> values) {
            addCriterion("resourceId in", values, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidNotIn(List<String> values) {
            addCriterion("resourceId not in", values, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidBetween(String value1, String value2) {
            addCriterion("resourceId between", value1, value2, "resourceid");
            return (Criteria) this;
        }

        public Criteria andResourceidNotBetween(String value1, String value2) {
            addCriterion("resourceId not between", value1, value2, "resourceid");
            return (Criteria) this;
        }

        public Criteria andDailyIsNull() {
            addCriterion("daily is null");
            return (Criteria) this;
        }

        public Criteria andDailyIsNotNull() {
            addCriterion("daily is not null");
            return (Criteria) this;
        }

        public Criteria andDailyEqualTo(Date value) {
            addCriterionForJDBCDate("daily =", value, "daily");
            return (Criteria) this;
        }

        public Criteria andDailyNotEqualTo(Date value) {
            addCriterionForJDBCDate("daily <>", value, "daily");
            return (Criteria) this;
        }

        public Criteria andDailyGreaterThan(Date value) {
            addCriterionForJDBCDate("daily >", value, "daily");
            return (Criteria) this;
        }

        public Criteria andDailyGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("daily >=", value, "daily");
            return (Criteria) this;
        }

        public Criteria andDailyLessThan(Date value) {
            addCriterionForJDBCDate("daily <", value, "daily");
            return (Criteria) this;
        }

        public Criteria andDailyLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("daily <=", value, "daily");
            return (Criteria) this;
        }

        public Criteria andDailyIn(List<Date> values) {
            addCriterionForJDBCDate("daily in", values, "daily");
            return (Criteria) this;
        }

        public Criteria andDailyNotIn(List<Date> values) {
            addCriterionForJDBCDate("daily not in", values, "daily");
            return (Criteria) this;
        }

        public Criteria andDailyBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("daily between", value1, value2, "daily");
            return (Criteria) this;
        }

        public Criteria andDailyNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("daily not between", value1, value2, "daily");
            return (Criteria) this;
        }

        public Criteria andBrowsercountIsNull() {
            addCriterion("browserCount is null");
            return (Criteria) this;
        }

        public Criteria andBrowsercountIsNotNull() {
            addCriterion("browserCount is not null");
            return (Criteria) this;
        }

        public Criteria andBrowsercountEqualTo(Integer value) {
            addCriterion("browserCount =", value, "browsercount");
            return (Criteria) this;
        }

        public Criteria andBrowsercountNotEqualTo(Integer value) {
            addCriterion("browserCount <>", value, "browsercount");
            return (Criteria) this;
        }

        public Criteria andBrowsercountGreaterThan(Integer value) {
            addCriterion("browserCount >", value, "browsercount");
            return (Criteria) this;
        }

        public Criteria andBrowsercountGreaterThanOrEqualTo(Integer value) {
            addCriterion("browserCount >=", value, "browsercount");
            return (Criteria) this;
        }

        public Criteria andBrowsercountLessThan(Integer value) {
            addCriterion("browserCount <", value, "browsercount");
            return (Criteria) this;
        }

        public Criteria andBrowsercountLessThanOrEqualTo(Integer value) {
            addCriterion("browserCount <=", value, "browsercount");
            return (Criteria) this;
        }

        public Criteria andBrowsercountIn(List<Integer> values) {
            addCriterion("browserCount in", values, "browsercount");
            return (Criteria) this;
        }

        public Criteria andBrowsercountNotIn(List<Integer> values) {
            addCriterion("browserCount not in", values, "browsercount");
            return (Criteria) this;
        }

        public Criteria andBrowsercountBetween(Integer value1, Integer value2) {
            addCriterion("browserCount between", value1, value2, "browsercount");
            return (Criteria) this;
        }

        public Criteria andBrowsercountNotBetween(Integer value1, Integer value2) {
            addCriterion("browserCount not between", value1, value2, "browsercount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountIsNull() {
            addCriterion("downloadCount is null");
            return (Criteria) this;
        }

        public Criteria andDownloadcountIsNotNull() {
            addCriterion("downloadCount is not null");
            return (Criteria) this;
        }

        public Criteria andDownloadcountEqualTo(Integer value) {
            addCriterion("downloadCount =", value, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountNotEqualTo(Integer value) {
            addCriterion("downloadCount <>", value, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountGreaterThan(Integer value) {
            addCriterion("downloadCount >", value, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("downloadCount >=", value, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountLessThan(Integer value) {
            addCriterion("downloadCount <", value, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountLessThanOrEqualTo(Integer value) {
            addCriterion("downloadCount <=", value, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountIn(List<Integer> values) {
            addCriterion("downloadCount in", values, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountNotIn(List<Integer> values) {
            addCriterion("downloadCount not in", values, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountBetween(Integer value1, Integer value2) {
            addCriterion("downloadCount between", value1, value2, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andDownloadcountNotBetween(Integer value1, Integer value2) {
            addCriterion("downloadCount not between", value1, value2, "downloadcount");
            return (Criteria) this;
        }

        public Criteria andAgreecountIsNull() {
            addCriterion("agreeCount is null");
            return (Criteria) this;
        }

        public Criteria andAgreecountIsNotNull() {
            addCriterion("agreeCount is not null");
            return (Criteria) this;
        }

        public Criteria andAgreecountEqualTo(Integer value) {
            addCriterion("agreeCount =", value, "agreecount");
            return (Criteria) this;
        }

        public Criteria andAgreecountNotEqualTo(Integer value) {
            addCriterion("agreeCount <>", value, "agreecount");
            return (Criteria) this;
        }

        public Criteria andAgreecountGreaterThan(Integer value) {
            addCriterion("agreeCount >", value, "agreecount");
            return (Criteria) this;
        }

        public Criteria andAgreecountGreaterThanOrEqualTo(Integer value) {
            addCriterion("agreeCount >=", value, "agreecount");
            return (Criteria) this;
        }

        public Criteria andAgreecountLessThan(Integer value) {
            addCriterion("agreeCount <", value, "agreecount");
            return (Criteria) this;
        }

        public Criteria andAgreecountLessThanOrEqualTo(Integer value) {
            addCriterion("agreeCount <=", value, "agreecount");
            return (Criteria) this;
        }

        public Criteria andAgreecountIn(List<Integer> values) {
            addCriterion("agreeCount in", values, "agreecount");
            return (Criteria) this;
        }

        public Criteria andAgreecountNotIn(List<Integer> values) {
            addCriterion("agreeCount not in", values, "agreecount");
            return (Criteria) this;
        }

        public Criteria andAgreecountBetween(Integer value1, Integer value2) {
            addCriterion("agreeCount between", value1, value2, "agreecount");
            return (Criteria) this;
        }

        public Criteria andAgreecountNotBetween(Integer value1, Integer value2) {
            addCriterion("agreeCount not between", value1, value2, "agreecount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountIsNull() {
            addCriterion("collectionCount is null");
            return (Criteria) this;
        }

        public Criteria andCollectioncountIsNotNull() {
            addCriterion("collectionCount is not null");
            return (Criteria) this;
        }

        public Criteria andCollectioncountEqualTo(Integer value) {
            addCriterion("collectionCount =", value, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountNotEqualTo(Integer value) {
            addCriterion("collectionCount <>", value, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountGreaterThan(Integer value) {
            addCriterion("collectionCount >", value, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountGreaterThanOrEqualTo(Integer value) {
            addCriterion("collectionCount >=", value, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountLessThan(Integer value) {
            addCriterion("collectionCount <", value, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountLessThanOrEqualTo(Integer value) {
            addCriterion("collectionCount <=", value, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountIn(List<Integer> values) {
            addCriterion("collectionCount in", values, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountNotIn(List<Integer> values) {
            addCriterion("collectionCount not in", values, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountBetween(Integer value1, Integer value2) {
            addCriterion("collectionCount between", value1, value2, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCollectioncountNotBetween(Integer value1, Integer value2) {
            addCriterion("collectionCount not between", value1, value2, "collectioncount");
            return (Criteria) this;
        }

        public Criteria andCostcountIsNull() {
            addCriterion("costCount is null");
            return (Criteria) this;
        }

        public Criteria andCostcountIsNotNull() {
            addCriterion("costCount is not null");
            return (Criteria) this;
        }

        public Criteria andCostcountEqualTo(Integer value) {
            addCriterion("costCount =", value, "costcount");
            return (Criteria) this;
        }

        public Criteria andCostcountNotEqualTo(Integer value) {
            addCriterion("costCount <>", value, "costcount");
            return (Criteria) this;
        }

        public Criteria andCostcountGreaterThan(Integer value) {
            addCriterion("costCount >", value, "costcount");
            return (Criteria) this;
        }

        public Criteria andCostcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("costCount >=", value, "costcount");
            return (Criteria) this;
        }

        public Criteria andCostcountLessThan(Integer value) {
            addCriterion("costCount <", value, "costcount");
            return (Criteria) this;
        }

        public Criteria andCostcountLessThanOrEqualTo(Integer value) {
            addCriterion("costCount <=", value, "costcount");
            return (Criteria) this;
        }

        public Criteria andCostcountIn(List<Integer> values) {
            addCriterion("costCount in", values, "costcount");
            return (Criteria) this;
        }

        public Criteria andCostcountNotIn(List<Integer> values) {
            addCriterion("costCount not in", values, "costcount");
            return (Criteria) this;
        }

        public Criteria andCostcountBetween(Integer value1, Integer value2) {
            addCriterion("costCount between", value1, value2, "costcount");
            return (Criteria) this;
        }

        public Criteria andCostcountNotBetween(Integer value1, Integer value2) {
            addCriterion("costCount not between", value1, value2, "costcount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table js_resource_statistics
     *
     * @mbggenerated do_not_delete_during_merge Fri Jul 07 09:05:37 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table js_resource_statistics
     *
     * @mbggenerated Fri Jul 07 09:05:37 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}